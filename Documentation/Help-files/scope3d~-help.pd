#N struct 1046-point float x0 float y0 float xs float ys float fg float in float gridx float gridy;
#N canvas 460 43 575 659 10;
#X obj 4 618 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 5 237 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 534 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 4 592 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 73 244 cnv 17 3 241 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 159 243 signal;
#X text 204 541 (none);
#X obj 73 490 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 159 490 signal;
#X text 203 490 - signal to be displayed on the Y axis, f 55;
#X text 203 243 - signal to be displayed in the X axis, f 55;
#X text 205 597 (none);
#X obj 4 562 cnv 3 550 3 empty empty flags 8 12 0 13 #dcdcdc #000000 0;
#X text 93 370 fgcolor <f \, f \, f>;
#X text 93 384 bgcolor <f \, f \, f>;
#X text 81 398 gridcolor <f \, f \, f>;
#X obj 499 58 else/setdsp~;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 344 11 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 22 40 cnv 4 4 4 empty empty 3D\ oscilloscope\ display 0 28 2 18 #e0e0e0 #000000 0;
#X obj 457 11 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 477 11 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 514 11 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 463 26 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 501 26 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 2 3 cnv 15 301 42 empty empty scope3d~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 2 3 graph;
#X text 203 370 - sets front/signal RGB color (values 0-255), f 55;
#X text 203 384 - sets background RGB color (values 0-255), f 55;
#X text 203 398 - sets grid RGB color (values 0-255), f 55;
#N canvas 593 43 510 693 buffer_period 0;
#X obj 150 143 hsl 136 16 1 1024 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 147 164 7 0 0 0 - - - 0;
#X obj 63 89 hsl 136 16 2 1024 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 60 110 8 0 0 0 - - - 0;
#X obj 192 289 hsl 136 16 50 1000 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 189 310 7 0 0 0 - - - 0;
#X text 113 110 samples per line;
#X text 198 164 nlines;
#X msg 60 130 nsamples \$1;
#X msg 147 184 nlines \$1;
#X obj 372 139 else/setdsp~;
#X obj 199 378 osc~ 200;
#X obj 268 378 osc~ 300.1;
#X text 268 87 Settings for buffer size and refresh rate period., f 24;
#X msg 189 330 rate \$1;
#X text 239 310 refresh rate in ms;
#X text 243 244 number of samples per line & number of lines in buffer, f 27;
#X listbox 164 249 10 0 0 0 - - - 12;
#X obj 164 222 else/initmess 256 128;
#X text 52 7 "nlines" sets the number of lines in the display. The number of samples represented by each line is set by "nsamples". Therefore \, the total number of samples (or period) displayed in the scope is equal to: nsamples * nlines. You can also set both parameters with a list input., f 63;
#X obj 147 414 scope3d~ -dim 250 250 -zoom 0.75;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 14 0;
#X connect 8 0 20 0;
#X connect 9 0 20 0;
#X connect 11 0 20 0;
#X connect 12 0 20 1;
#X connect 14 0 20 0;
#X connect 17 0 20 0;
#X connect 18 0 17 0;
#X restore 426 183 pd buffer_period;
#X obj 226 63 osc~ 100;
#X obj 292 63 osc~ 201;
#X obj 359 65 osc~ 302;
#X obj 73 511 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 159 511 signal;
#X text 34 114 [scope3d~] displays signals in 3D. This is an object coded in Lua and is very very experimental and likely to change and break., f 26;
#X text 117 412 rotate <f \, f>;
#X text 142 568 all messages are also flags (preceded by '-');
#X text 123 454 drag <float>;
#X text 123 314 zoom <float>;
#N canvas 626 294 417 233 see 1;
#X text 127 22 For up to 2D plots \, see:;
#X text 159 49 [scope~];
#X obj 106 86 else/scope~ 200 100 256 3 128 -1 1 0 0 0 0 30 30 30 190 190 190 160 160 160 0 empty;
#X restore 94 178 pd see also;
#X text 81 328 perspective <float>;
#X text 203 426 - rotate around x axis in degrees, f 55;
#X text 203 440 - rotate around y axis in degrees, f 55;
#X text 203 468 - enable/disable grid visualization, f 55;
#X text 123 468 grid <float>;
#X text 111 271 nlines <float>;
#X text 99 257 nsamples <float>;
#X text 135 300 dim <f \, f>;
#X text 105 426 rotatex <float>;
#X text 105 440 rotatey <float>;
#X text 203 511 - signal to be displayed on the Z axis, f 55;
#X text 117 342 width <float>;
#N canvas 687 69 512 582 receive 0;
#X obj 238 122 hsl 136 16 0.25 1 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 235 145 5 0 0 0 - - - 0;
#X msg 235 169 zoom \$1;
#X obj 141 248 osc~ 100;
#X obj 226 248 osc~ 201;
#X obj 314 248 osc~ 302;
#X msg 105 213 receive \\\$0-x;
#X obj 235 197 s \$0-x;
#X obj 105 190 loadbang;
#X text 39 17 The object below has a receive symbol \, so you can send messages to it via a [send] object (but not audio). The receive symbol can be set with the receive message or the -receive flag. Dollar signs must be escaped. If you set a receive name as "empty" then it can't receive messages anymore., f 69;
#X obj 107 101 else/setdsp~;
#X obj 105 286 scope3d~ 0 0 250 250 1 1 1 1 0.5 1 50 8 256 30 30 30 190 190 190 160 160 160 \\\$0-x;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 7 0;
#X connect 3 0 11 0;
#X connect 4 0 11 1;
#X connect 5 0 11 2;
#X connect 6 0 11 0;
#X connect 8 0 6 0;
#X restore 426 204 pd receive;
#X text 123 356 rate <float>;
#X text 203 300 - sets width/height dimensions (default 140 140), f 55;
#X text 203 314 - sets zoom level (default 1), f 55;
#X text 203 328 - sets perspective level (default 1), f 55;
#X text 203 342 - sets line width (default \, min 1), f 55;
#X text 203 356 - sets refresh rate period in ms (default 50), f 55;
#X text 203 412 - rotate around x/y axis in degrees (default 0 0), f 55;
#X text 203 454 - enable/disable mouse interaction (default 1), f 55;
#X text 203 257 - sets number of samples per line (def 8 \, values >= 2), f 55;
#N canvas 302 113 969 542 basic 0;
#X obj 370 187 osc~ 80;
#X obj 463 187 osc~ 40.1;
#X obj 585 187 osc~ 120;
#X obj 70 458 s \$0-basic;
#X obj 342 155 r \$0-basic;
#X obj 98 269 hsl 136 16 0.25 1.5 1 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X floatatom 95 290 5 0 0 0 - - - 0;
#X msg 95 310 zoom \$1;
#X floatatom 70 204 5 0 0 0 - - - 0;
#X msg 70 226 width \$1;
#X msg 119 397 grid \$1;
#X obj 119 366 tgl 23 1 empty empty empty 0 -10 0 12 #dfdfdf #000000 #000000 1 1;
#X obj 73 183 hsl 136 16 1 5 0 0 empty empty empty -2 -10 0 12 #dfdfdf #000000 #000000 0 1;
#X msg 52 146 dim \$1 \$2;
#X floatatom 52 89 5 0 0 0 - - - 0;
#X floatatom 133 89 5 0 0 0 - - - 0;
#X text 110 206 set line width;
#X text 120 147 set width and height;
#X obj 236 372 else/setdsp~;
#X msg 713 196 rotate \$2 \$1;
#X floatatom 640 295 5 0 0 0 - - - 0;
#X listbox 713 174 13 0 0 0 - - - 0;
#X obj 713 42 slider2d 127 127 0 360 0 360 1 211 211 211 0 0 0 0 0 0 0 0 empty empty;
#X msg 747 376 drag \$1;
#X obj 747 348 tgl 21 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000 0 1;
#X msg 640 319 rotatex \$1;
#X obj 713 444 s \$0-basic;
#X text 329 48 You can use mouse to rotate the display in 2 dimensions \, just click and drag. You can use the "drag 0" message to disable mouse dragging. You can also use 'rotate' \, 'rotatex' and 'rotatey' messages for rotatation., f 57;
#X obj 713 15 else/initmess 0 0;
#X text 253 304 click and drag to rotate., f 9;
#X text 305 315 --->;
#X obj 640 234 else/knob 50 0 360 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X floatatom 732 295 5 0 0 0 - - - 0;
#X obj 732 233 else/knob 50 0 360 0 0 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X msg 732 319 rotatey \$1;
#X floatatom 814 362 5 0 0 0 - - - 0;
#X msg 814 391 perspective \$1;
#X obj 814 301 else/knob 50 1 2 0 1 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 1;
#X text 329 18 To the left we have basic appaerance messages to set dimension sizes \, line width \, zoom and grid., f 57;
#X text 329 101 To perspective setting enhances the 3D effect and changes the 'depth feel'. Increasing it appear more dramatically different in size based on their distance.;
#X obj 52 116 pack2 250 250, f 14;
#X obj 52 29 else/knob 50 0 250 0 250 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 133 29 else/knob 50 0 250 0 250 empty empty #dfdfdf #7c7c7c black 1 0 0 0 1 320 0 0 0;
#X obj 342 224 scope3d~ 0 0 250 250 1 1 1 1 0.75 1 50 8 256 30 30 30 190 190 190 160 160 160 empty;
#X connect 0 0 43 0;
#X connect 1 0 43 1;
#X connect 2 0 43 2;
#X connect 4 0 43 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X connect 10 0 3 0;
#X connect 11 0 10 0;
#X connect 12 0 8 0;
#X connect 13 0 3 0;
#X connect 14 0 40 0;
#X connect 15 0 40 1;
#X connect 19 0 26 0;
#X connect 20 0 25 0;
#X connect 21 0 19 0;
#X connect 22 0 21 0;
#X connect 23 0 26 0;
#X connect 24 0 23 0;
#X connect 25 0 26 0;
#X connect 28 0 22 0;
#X connect 31 0 20 0;
#X connect 32 0 34 0;
#X connect 33 0 32 0;
#X connect 34 0 26 0;
#X connect 35 0 36 0;
#X connect 36 0 26 0;
#X connect 37 0 35 0;
#X connect 40 0 13 0;
#X connect 41 0 14 0;
#X connect 42 0 15 0;
#X restore 426 162 pd basic;
#N canvas 460 82 574 541 colors 0;
#X obj 341 272 osc~ 24;
#X text 58 309 RGB colors (values from 0-255) for fgcolor (front/signal) \, bgcolor (background) & grid (gridcolor)., f 35;
#X obj 55 217 else/pack2 fgcolor f f f, f 13;
#X obj 67 49 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rf empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 67 191 5 0 0 0 - - - 0;
#X obj 105 49 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gf empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 105 191 5 0 0 0 - - - 0;
#X obj 145 49 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bf empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 145 191 5 0 0 0 - - - 0;
#X obj 193 217 else/pack2 bgcolor f f f, f 13;
#X obj 326 217 else/pack2 gridcolor f f f, f 15;
#X obj 346 49 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rg empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 346 191 5 0 0 0 - - - 0;
#X obj 384 49 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gg empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 384 191 5 0 0 0 - - - 0;
#X obj 424 49 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bg empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 424 191 5 0 0 0 - - - 0;
#X obj 205 49 vsl 15 128 0 255 0 0 rjhfkjfbws \$0-Rb empty 0 -9 0 10 #fc0000 #fcfcfc #000000 0 1;
#X floatatom 205 191 5 0 0 0 - - - 0;
#X obj 243 49 vsl 15 128 0 255 0 0 xaslkdjla \$0-Gb empty 0 -9 0 10 #00fc00 #fcfcfc #000000 0 1;
#X floatatom 243 191 5 0 0 0 - - - 0;
#X obj 283 49 vsl 15 128 0 255 0 0 qdaskjlf \$0-Bb empty 0 -9 0 10 #0000fc #fcfcfc #000000 0 1;
#X floatatom 283 191 5 0 0 0 - - - 0;
#X obj 422 272 osc~ 49;
#X obj 131 375 else/setdsp~;
#X obj 326 311 scope3d~ 20 20 200 200 1 1 1 1 0.9 1 50 8 512 30 30 30 190 190 190 160 160 160 empty;
#X connect 0 0 25 0;
#X connect 2 0 25 0;
#X connect 3 0 4 0;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 6 0 2 2;
#X connect 7 0 8 0;
#X connect 8 0 2 3;
#X connect 9 0 25 0;
#X connect 10 0 25 0;
#X connect 11 0 12 0;
#X connect 12 0 10 1;
#X connect 13 0 14 0;
#X connect 14 0 10 2;
#X connect 15 0 16 0;
#X connect 16 0 10 3;
#X connect 17 0 18 0;
#X connect 18 0 9 1;
#X connect 19 0 20 0;
#X connect 20 0 9 2;
#X connect 21 0 22 0;
#X connect 22 0 9 3;
#X connect 23 0 25 1;
#X restore 483 162 pd colors;
#X text 203 271 - sets number of lines to draw (values 1-1024 \, def 256);
#X text 171 286 list;
#X text 203 286 - sets 'nsamples' and 'nlines', f 55;
#X obj 226 87 scope3d~ -zoom 0.75;
#X connect 32 0 70 0;
#X connect 33 0 70 1;
#X connect 34 0 70 2;
